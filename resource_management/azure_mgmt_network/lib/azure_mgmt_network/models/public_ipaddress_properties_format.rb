# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::Network
  module Models
    #
    # PublicIpAddress properties
    #
    class PublicIPAddressPropertiesFormat

      include MsRestAzure

      # @return [IPAllocationMethod] Gets or sets PublicIP allocation method
      # (Static/Dynamic). Possible values include: 'Static', 'Dynamic'
      attr_accessor :public_ipallocation_method

      # @return [IPConfiguration]
      attr_accessor :ip_configuration

      # @return [PublicIPAddressDnsSettings] Gets or sets FQDN of the DNS
      # record associated with the public IP address
      attr_accessor :dns_settings

      # @return [String]
      attr_accessor :ip_address

      # @return [Integer] Gets or sets the Idletimeout of the public IP address
      attr_accessor :idle_timeout_in_minutes

      # @return [String] Gets or sets resource guid property of the PublicIP
      # resource
      attr_accessor :resource_guid

      # @return [String] Gets or sets Provisioning state of the PublicIP
      # resource Updating/Deleting/Failed
      attr_accessor :provisioning_state

      #
      # Validate the object. Throws ValidationError if validation fails.
      #
      def validate
        @ip_configuration.validate unless @ip_configuration.nil?
        @dns_settings.validate unless @dns_settings.nil?
      end

      #
      # Serializes given Model object into Ruby Hash.
      # @param object Model object to serialize.
      # @return [Hash] Serialized object in form of Ruby Hash.
      #
      def self.serialize_object(object)
        object.validate
        output_object = {}

        serialized_property = object.public_ipallocation_method
        output_object['publicIPAllocationMethod'] = serialized_property unless serialized_property.nil?

        serialized_property = object.ip_configuration
        unless serialized_property.nil?
          serialized_property = IPConfiguration.serialize_object(serialized_property)
        end
        output_object['ipConfiguration'] = serialized_property unless serialized_property.nil?

        serialized_property = object.dns_settings
        unless serialized_property.nil?
          serialized_property = PublicIPAddressDnsSettings.serialize_object(serialized_property)
        end
        output_object['dnsSettings'] = serialized_property unless serialized_property.nil?

        serialized_property = object.ip_address
        output_object['ipAddress'] = serialized_property unless serialized_property.nil?

        serialized_property = object.idle_timeout_in_minutes
        output_object['idleTimeoutInMinutes'] = serialized_property unless serialized_property.nil?

        serialized_property = object.resource_guid
        output_object['resourceGuid'] = serialized_property unless serialized_property.nil?

        serialized_property = object.provisioning_state
        output_object['provisioningState'] = serialized_property unless serialized_property.nil?

        output_object
      end

      #
      # Deserializes given Ruby Hash into Model object.
      # @param object [Hash] Ruby Hash object to deserialize.
      # @return [PublicIPAddressPropertiesFormat] Deserialized object.
      #
      def self.deserialize_object(object)
        return if object.nil?
        output_object = PublicIPAddressPropertiesFormat.new

        deserialized_property = object['publicIPAllocationMethod']
        if (!deserialized_property.nil? && !deserialized_property.empty?)
          enum_is_valid = IPAllocationMethod.constants.any? { |e| IPAllocationMethod.const_get(e).to_s.downcase == deserialized_property.downcase }
          warn 'Enum IPAllocationMethod does not contain ' + deserialized_property.downcase + ', but was received from the server.' unless enum_is_valid
        end
        output_object.public_ipallocation_method = deserialized_property

        deserialized_property = object['ipConfiguration']
        unless deserialized_property.nil?
          deserialized_property = IPConfiguration.deserialize_object(deserialized_property)
        end
        output_object.ip_configuration = deserialized_property

        deserialized_property = object['dnsSettings']
        unless deserialized_property.nil?
          deserialized_property = PublicIPAddressDnsSettings.deserialize_object(deserialized_property)
        end
        output_object.dns_settings = deserialized_property

        deserialized_property = object['ipAddress']
        output_object.ip_address = deserialized_property

        deserialized_property = object['idleTimeoutInMinutes']
        deserialized_property = Integer(deserialized_property) unless deserialized_property.to_s.empty?
        output_object.idle_timeout_in_minutes = deserialized_property

        deserialized_property = object['resourceGuid']
        output_object.resource_guid = deserialized_property

        deserialized_property = object['provisioningState']
        output_object.provisioning_state = deserialized_property

        output_object
      end
    end
  end
end
