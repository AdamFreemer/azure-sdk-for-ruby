# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::Network
  module Models
    #
    # The routes table associated with the ExpressRouteCircuit
    #
    class ExpressRouteCircuitRoutesTable

      include MsRestAzure

      # @return [String] Gets AddressPrefix.
      attr_accessor :address_prefix

      # @return [RouteNextHopType] Gets NextHopType. Possible values include:
      # 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance',
      # 'None'
      attr_accessor :next_hop_type

      # @return [String] Gets NextHopIP.
      attr_accessor :next_hop_ip

      # @return [String] Gets AsPath.
      attr_accessor :as_path

      #
      # Validate the object. Throws ValidationError if validation fails.
      #
      def validate
        fail MsRest::ValidationError, 'property next_hop_type is nil' if @next_hop_type.nil?
      end

      #
      # Serializes given Model object into Ruby Hash.
      # @param object Model object to serialize.
      # @return [Hash] Serialized object in form of Ruby Hash.
      #
      def self.serialize_object(object)
        object.validate
        output_object = {}

        serialized_property = object.next_hop_type
        output_object['nextHopType'] = serialized_property unless serialized_property.nil?

        serialized_property = object.address_prefix
        output_object['addressPrefix'] = serialized_property unless serialized_property.nil?

        serialized_property = object.next_hop_ip
        output_object['nextHopIP'] = serialized_property unless serialized_property.nil?

        serialized_property = object.as_path
        output_object['asPath'] = serialized_property unless serialized_property.nil?

        output_object
      end

      #
      # Deserializes given Ruby Hash into Model object.
      # @param object [Hash] Ruby Hash object to deserialize.
      # @return [ExpressRouteCircuitRoutesTable] Deserialized object.
      #
      def self.deserialize_object(object)
        return if object.nil?
        output_object = ExpressRouteCircuitRoutesTable.new

        deserialized_property = object['nextHopType']
        if (!deserialized_property.nil? && !deserialized_property.empty?)
          enum_is_valid = RouteNextHopType.constants.any? { |e| RouteNextHopType.const_get(e).to_s.downcase == deserialized_property.downcase }
          warn 'Enum RouteNextHopType does not contain ' + deserialized_property.downcase + ', but was received from the server.' unless enum_is_valid
        end
        output_object.next_hop_type = deserialized_property

        deserialized_property = object['addressPrefix']
        output_object.address_prefix = deserialized_property

        deserialized_property = object['nextHopIP']
        output_object.next_hop_ip = deserialized_property

        deserialized_property = object['asPath']
        output_object.as_path = deserialized_property

        output_object
      end
    end
  end
end
