# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::NotificationHubs
  module Models
    #
    # Description of a CheckAvailibility resource.
    #
    class CheckAvailabilityResource

      include MsRestAzure

      # @return [String] Gets or sets the id
      attr_accessor :id

      # @return [String] Gets or sets datacenter location
      attr_accessor :location

      # @return [String] Gets or sets name
      attr_accessor :name

      # @return [String] Gets or sets resource type
      attr_accessor :type

      # @return [Hash{String => String}] Gets or sets tags
      attr_accessor :tags

      # @return [Boolean] Gets or sets true if the name is available and can
      # be used to create new Namespace/NotificationHub. Otherwise false.
      attr_accessor :is_availiable

      #
      # Validate the object. Throws ValidationError if validation fails.
      #
      def validate
        @tags.each{ |e| e.validate if e.respond_to?(:validate) } unless @tags.nil?
      end

      #
      # Serializes given Model object into Ruby Hash.
      # @param object Model object to serialize.
      # @return [Hash] Serialized object in form of Ruby Hash.
      #
      def self.serialize_object(object)
        object.validate
        output_object = {}

        serialized_property = object.id
        output_object['id'] = serialized_property unless serialized_property.nil?

        serialized_property = object.location
        output_object['location'] = serialized_property unless serialized_property.nil?

        serialized_property = object.name
        output_object['name'] = serialized_property unless serialized_property.nil?

        serialized_property = object.type
        output_object['type'] = serialized_property unless serialized_property.nil?

        serialized_property = object.tags
        output_object['tags'] = serialized_property unless serialized_property.nil?

        serialized_property = object.is_availiable
        output_object['isAvailiable'] = serialized_property unless serialized_property.nil?

        output_object
      end

      #
      # Deserializes given Ruby Hash into Model object.
      # @param object [Hash] Ruby Hash object to deserialize.
      # @return [CheckAvailabilityResource] Deserialized object.
      #
      def self.deserialize_object(object)
        return if object.nil?
        output_object = CheckAvailabilityResource.new

        deserialized_property = object['id']
        output_object.id = deserialized_property

        deserialized_property = object['location']
        output_object.location = deserialized_property

        deserialized_property = object['name']
        output_object.name = deserialized_property

        deserialized_property = object['type']
        output_object.type = deserialized_property

        deserialized_property = object['tags']
        output_object.tags = deserialized_property

        deserialized_property = object['isAvailiable']
        output_object.is_availiable = deserialized_property

        output_object
      end
    end
  end
end
