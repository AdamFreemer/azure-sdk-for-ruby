# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::Web
  module Models
    #
    # Model object.
    #
    class SlotDifferenceProperties

      include MsRestAzure

      # @return [String] Indicates the type of the difference: Information,
      # Warning or Error.
      attr_accessor :type

      # @return [String] The type of the settings: General, AppSetting or
      # ConnectionString
      attr_accessor :setting_type

      # @return [String] Rule that describes how to process the difference in
      # settings during web app slot swap.
      attr_accessor :diff_rule

      # @return [String] Name of the setting
      attr_accessor :setting_name

      # @return [String] Value of the setting in the current web app slot
      attr_accessor :value_in_current_slot

      # @return [String] Value of the setting in the target web app slot
      attr_accessor :value_in_target_slot

      # @return [String] Description of the difference
      attr_accessor :description

      #
      # Validate the object. Throws ValidationError if validation fails.
      #
      def validate
        # Nothing to validate
      end

      #
      # Serializes given Model object into Ruby Hash.
      # @param object Model object to serialize.
      # @return [Hash] Serialized object in form of Ruby Hash.
      #
      def self.serialize_object(object)
        object.validate
        output_object = {}

        serialized_property = object.type
        output_object['type'] = serialized_property unless serialized_property.nil?

        serialized_property = object.setting_type
        output_object['settingType'] = serialized_property unless serialized_property.nil?

        serialized_property = object.diff_rule
        output_object['diffRule'] = serialized_property unless serialized_property.nil?

        serialized_property = object.setting_name
        output_object['settingName'] = serialized_property unless serialized_property.nil?

        serialized_property = object.value_in_current_slot
        output_object['valueInCurrentSlot'] = serialized_property unless serialized_property.nil?

        serialized_property = object.value_in_target_slot
        output_object['valueInTargetSlot'] = serialized_property unless serialized_property.nil?

        serialized_property = object.description
        output_object['description'] = serialized_property unless serialized_property.nil?

        output_object
      end

      #
      # Deserializes given Ruby Hash into Model object.
      # @param object [Hash] Ruby Hash object to deserialize.
      # @return [SlotDifferenceProperties] Deserialized object.
      #
      def self.deserialize_object(object)
        return if object.nil?
        output_object = SlotDifferenceProperties.new

        deserialized_property = object['type']
        output_object.type = deserialized_property

        deserialized_property = object['settingType']
        output_object.setting_type = deserialized_property

        deserialized_property = object['diffRule']
        output_object.diff_rule = deserialized_property

        deserialized_property = object['settingName']
        output_object.setting_name = deserialized_property

        deserialized_property = object['valueInCurrentSlot']
        output_object.value_in_current_slot = deserialized_property

        deserialized_property = object['valueInTargetSlot']
        output_object.value_in_target_slot = deserialized_property

        deserialized_property = object['description']
        output_object.description = deserialized_property

        output_object
      end
    end
  end
end
