# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::Web
  module Models
    #
    # Class that represents a VIP mapping
    #
    class VirtualIPMapping

      include MsRestAzure

      # @return [String] Virtual IP address
      attr_accessor :virtual_ip

      # @return [Integer] Internal HTTP port
      attr_accessor :internal_http_port

      # @return [Integer] Internal HTTPS port
      attr_accessor :internal_https_port

      # @return [Boolean] Is VIP mapping in use
      attr_accessor :in_use

      #
      # Validate the object. Throws ValidationError if validation fails.
      #
      def validate
        # Nothing to validate
      end

      #
      # Serializes given Model object into Ruby Hash.
      # @param object Model object to serialize.
      # @return [Hash] Serialized object in form of Ruby Hash.
      #
      def self.serialize_object(object)
        object.validate
        output_object = {}

        serialized_property = object.virtual_ip
        output_object['virtualIP'] = serialized_property unless serialized_property.nil?

        serialized_property = object.internal_http_port
        output_object['internalHttpPort'] = serialized_property unless serialized_property.nil?

        serialized_property = object.internal_https_port
        output_object['internalHttpsPort'] = serialized_property unless serialized_property.nil?

        serialized_property = object.in_use
        output_object['inUse'] = serialized_property unless serialized_property.nil?

        output_object
      end

      #
      # Deserializes given Ruby Hash into Model object.
      # @param object [Hash] Ruby Hash object to deserialize.
      # @return [VirtualIPMapping] Deserialized object.
      #
      def self.deserialize_object(object)
        return if object.nil?
        output_object = VirtualIPMapping.new

        deserialized_property = object['virtualIP']
        output_object.virtual_ip = deserialized_property

        deserialized_property = object['internalHttpPort']
        deserialized_property = Integer(deserialized_property) unless deserialized_property.to_s.empty?
        output_object.internal_http_port = deserialized_property

        deserialized_property = object['internalHttpsPort']
        deserialized_property = Integer(deserialized_property) unless deserialized_property.to_s.empty?
        output_object.internal_https_port = deserialized_property

        deserialized_property = object['inUse']
        output_object.in_use = deserialized_property

        output_object
      end
    end
  end
end
