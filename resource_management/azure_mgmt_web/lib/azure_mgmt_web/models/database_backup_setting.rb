# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::Web
  module Models
    #
    # Note: properties are serialized in JSON format and stored in DB.
    # if new properties are added they might not be in the
    # previous data rows
    # so please handle nulls
    #
    class DatabaseBackupSetting

      include MsRestAzure

      # @return [String] SqlAzure / MySql
      attr_accessor :database_type

      # @return [String]
      attr_accessor :name

      # @return [String] Contains a connection string name that is linked to
      # the SiteConfig.ConnectionStrings.
      # This is used during restore with overwrite connection
      # strings options.
      attr_accessor :connection_string_name

      # @return [String] Contains a connection string to a database which is
      # being backed up/restored. If the restore should happen to a new
      # database, the database name inside is the new one.
      attr_accessor :connection_string

      #
      # Validate the object. Throws ValidationError if validation fails.
      #
      def validate
        # Nothing to validate
      end

      #
      # Serializes given Model object into Ruby Hash.
      # @param object Model object to serialize.
      # @return [Hash] Serialized object in form of Ruby Hash.
      #
      def self.serialize_object(object)
        object.validate
        output_object = {}

        serialized_property = object.database_type
        output_object['databaseType'] = serialized_property unless serialized_property.nil?

        serialized_property = object.name
        output_object['name'] = serialized_property unless serialized_property.nil?

        serialized_property = object.connection_string_name
        output_object['connectionStringName'] = serialized_property unless serialized_property.nil?

        serialized_property = object.connection_string
        output_object['connectionString'] = serialized_property unless serialized_property.nil?

        output_object
      end

      #
      # Deserializes given Ruby Hash into Model object.
      # @param object [Hash] Ruby Hash object to deserialize.
      # @return [DatabaseBackupSetting] Deserialized object.
      #
      def self.deserialize_object(object)
        return if object.nil?
        output_object = DatabaseBackupSetting.new

        deserialized_property = object['databaseType']
        output_object.database_type = deserialized_property

        deserialized_property = object['name']
        output_object.name = deserialized_property

        deserialized_property = object['connectionStringName']
        output_object.connection_string_name = deserialized_property

        deserialized_property = object['connectionString']
        output_object.connection_string = deserialized_property

        output_object
      end
    end
  end
end
