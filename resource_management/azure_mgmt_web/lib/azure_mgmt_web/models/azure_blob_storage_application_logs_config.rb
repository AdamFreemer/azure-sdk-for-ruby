# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::Web
  module Models
    #
    # Application logs azure blob storage configuration
    #
    class AzureBlobStorageApplicationLogsConfig

      include MsRestAzure

      # @return [LogLevel] Log level. Possible values include: 'Off',
      # 'Verbose', 'Information', 'Warning', 'Error'
      attr_accessor :level

      # @return [String] SAS url to a azure blob container with
      # read/write/list/delete permissions
      attr_accessor :sas_url

      # @return [Integer] Retention in days.
      # Remove blobs older than X days.
      # 0 or lower means no retention.
      attr_accessor :retention_in_days

      #
      # Validate the object. Throws ValidationError if validation fails.
      #
      def validate
      end

      #
      # Serializes given Model object into Ruby Hash.
      # @param object Model object to serialize.
      # @return [Hash] Serialized object in form of Ruby Hash.
      #
      def self.serialize_object(object)
        object.validate
        output_object = {}

        serialized_property = object.level
        output_object['level'] = serialized_property unless serialized_property.nil?

        serialized_property = object.sas_url
        output_object['sasUrl'] = serialized_property unless serialized_property.nil?

        serialized_property = object.retention_in_days
        output_object['retentionInDays'] = serialized_property unless serialized_property.nil?

        output_object
      end

      #
      # Deserializes given Ruby Hash into Model object.
      # @param object [Hash] Ruby Hash object to deserialize.
      # @return [AzureBlobStorageApplicationLogsConfig] Deserialized object.
      #
      def self.deserialize_object(object)
        return if object.nil?
        output_object = AzureBlobStorageApplicationLogsConfig.new

        deserialized_property = object['level']
        if (!deserialized_property.nil? && !deserialized_property.empty?)
          enum_is_valid = LogLevel.constants.any? { |e| LogLevel.const_get(e).to_s.downcase == deserialized_property.downcase }
          warn 'Enum LogLevel does not contain ' + deserialized_property.downcase + ', but was received from the server.' unless enum_is_valid
        end
        output_object.level = deserialized_property

        deserialized_property = object['sasUrl']
        output_object.sas_url = deserialized_property

        deserialized_property = object['retentionInDays']
        deserialized_property = Integer(deserialized_property) unless deserialized_property.to_s.empty?
        output_object.retention_in_days = deserialized_property

        output_object
      end
    end
  end
end
