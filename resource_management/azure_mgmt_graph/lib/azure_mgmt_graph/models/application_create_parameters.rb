# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::Graph
  module Models
    #
    # Request parameters for create a new application
    #
    class ApplicationCreateParameters

      include MsRestAzure

      # @return [Boolean] Indicates if the application will be available to
      # other tenants
      attr_accessor :available_to_other_tenants

      # @return [String] Application display name
      attr_accessor :display_name

      # @return [String] Application homepage
      attr_accessor :homepage

      # @return [Array<String>] Application Uris
      attr_accessor :identifier_uris

      # @return [Array<String>] Application reply Urls
      attr_accessor :reply_urls

      # @return [Array<KeyCredential>] Gets or sets the list of KeyCredential
      # objects
      attr_accessor :key_credentials

      # @return [Array<PasswordCredential>] Gets or sets the list of
      # PasswordCredential objects
      attr_accessor :password_credentials

      #
      # Validate the object. Throws ValidationError if validation fails.
      #
      def validate
        fail MsRest::ValidationError, 'property available_to_other_tenants is nil' if @available_to_other_tenants.nil?
        fail MsRest::ValidationError, 'property display_name is nil' if @display_name.nil?
        fail MsRest::ValidationError, 'property homepage is nil' if @homepage.nil?
        fail MsRest::ValidationError, 'property identifier_uris is nil' if @identifier_uris.nil?
        @identifier_uris.each{ |e| e.validate if e.respond_to?(:validate) } unless @identifier_uris.nil?
        @reply_urls.each{ |e| e.validate if e.respond_to?(:validate) } unless @reply_urls.nil?
        @key_credentials.each{ |e| e.validate if e.respond_to?(:validate) } unless @key_credentials.nil?
        @password_credentials.each{ |e| e.validate if e.respond_to?(:validate) } unless @password_credentials.nil?
      end

      #
      # Serializes given Model object into Ruby Hash.
      # @param object Model object to serialize.
      # @return [Hash] Serialized object in form of Ruby Hash.
      #
      def self.serialize_object(object)
        object.validate
        output_object = {}

        serialized_property = object.available_to_other_tenants
        output_object['availableToOtherTenants'] = serialized_property unless serialized_property.nil?

        serialized_property = object.display_name
        output_object['displayName'] = serialized_property unless serialized_property.nil?

        serialized_property = object.homepage
        output_object['homepage'] = serialized_property unless serialized_property.nil?

        serialized_property = object.identifier_uris
        output_object['identifierUris'] = serialized_property unless serialized_property.nil?

        serialized_property = object.reply_urls
        output_object['replyUrls'] = serialized_property unless serialized_property.nil?

        serialized_property = object.key_credentials
        unless serialized_property.nil?
          serializedArray = []
          serialized_property.each do |element2|
            unless element2.nil?
              element2 = KeyCredential.serialize_object(element2)
            end
            serializedArray.push(element2)
          end
          serialized_property = serializedArray
        end
        output_object['keyCredentials'] = serialized_property unless serialized_property.nil?

        serialized_property = object.password_credentials
        unless serialized_property.nil?
          serializedArray = []
          serialized_property.each do |element3|
            unless element3.nil?
              element3 = PasswordCredential.serialize_object(element3)
            end
            serializedArray.push(element3)
          end
          serialized_property = serializedArray
        end
        output_object['passwordCredentials'] = serialized_property unless serialized_property.nil?

        output_object
      end

      #
      # Deserializes given Ruby Hash into Model object.
      # @param object [Hash] Ruby Hash object to deserialize.
      # @return [ApplicationCreateParameters] Deserialized object.
      #
      def self.deserialize_object(object)
        return if object.nil?
        output_object = ApplicationCreateParameters.new

        deserialized_property = object['availableToOtherTenants']
        output_object.available_to_other_tenants = deserialized_property

        deserialized_property = object['displayName']
        output_object.display_name = deserialized_property

        deserialized_property = object['homepage']
        output_object.homepage = deserialized_property

        deserialized_property = object['identifierUris']
        output_object.identifier_uris = deserialized_property

        deserialized_property = object['replyUrls']
        output_object.reply_urls = deserialized_property

        deserialized_property = object['keyCredentials']
        unless deserialized_property.nil?
          deserialized_array = []
          deserialized_property.each do |element6|
            unless element6.nil?
              element6 = KeyCredential.deserialize_object(element6)
            end
            deserialized_array.push(element6)
          end
          deserialized_property = deserialized_array
        end
        output_object.key_credentials = deserialized_property

        deserialized_property = object['passwordCredentials']
        unless deserialized_property.nil?
          deserialized_array = []
          deserialized_property.each do |element7|
            unless element7.nil?
              element7 = PasswordCredential.deserialize_object(element7)
            end
            deserialized_array.push(element7)
          end
          deserialized_property = deserialized_array
        end
        output_object.password_credentials = deserialized_property

        output_object
      end
    end
  end
end
