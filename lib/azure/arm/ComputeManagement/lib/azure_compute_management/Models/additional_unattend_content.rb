# Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
# Changes may cause incorrect behavior and will be lost if the code is


module Azure::ARM::Compute
  module Models
    #
    # Gets or sets additional XML formatted information that can be included
    # in the Unattend.xml file, which is used by Windows Setup. Contents are
    # defined by setting name, component name, and the pass in which the
    # content is a applied.
    #
    class AdditionalUnattendContent
      # @return Gets or sets the pass name. Currently, the only allowable
      # value is oobeSystem. Possible values for this property include:
      # 'oobeSystem'
      attr_accessor :pass_name

      # @return Gets or sets the component name. Currently, the only allowable
      # value is Microsoft-Windows-Shell-Setup. Possible values for this
      # property include: 'Microsoft-Windows-Shell-Setup'
      attr_accessor :component_name

      # @return Gets or sets setting name (e.g. FirstLogonCommands, AutoLogon
      # ). Possible values for this property include: 'AutoLogon',
      # 'FirstLogonCommands'
      attr_accessor :setting_name

      # @return [String] Gets or sets XML formatted content that is added to
      # the unattend.xml file in the specified pass and component.The XML
      # must be less than 4 KB and must include the root element for the
      # setting or feature that is being inserted.
      attr_accessor :content

      #
      # Validate the object. Throws ArgumentError if validation fails.
      #
      def validate
      end

      #
      # Serializes given Model object into Ruby Hash.
      # @param object Model object to serialize.
      # @return [Hash] Serialized object in form of Ruby Hash.
      #
      def self.serialize_object(object)
        object.validate
        output_object = {}

        serialized_property = object.pass_name
        output_object['passName'] = serialized_property unless serialized_property.nil?

        serialized_property = object.component_name
        output_object['componentName'] = serialized_property unless serialized_property.nil?

        serialized_property = object.setting_name
        output_object['settingName'] = serialized_property unless serialized_property.nil?

        serialized_property = object.content
        output_object['content'] = serialized_property unless serialized_property.nil?

        output_object
      end

      #
      # Deserializes given Ruby Hash into Model object.
      # @param object [Hash] Ruby Hash object to deserialize.
      # @return [AdditionalUnattendContent] Deserialized object.
      #
      def self.deserialize_object(object)
        return if object.nil?
        output_object = AdditionalUnattendContent.new

        deserialized_property = object['passName']
        fail MsRest::DeserializationError.new('Error occured in deserializing the enum', nil, nil, nil) if (!deserialized_property.nil? && !deserialized_property.empty? && !Azure::ARM::Compute::PassNames.constants.any? { |e| Azure::ARM::Compute::PassNames.const_get(e) == deserialized_property })
        output_object.pass_name = deserialized_property

        deserialized_property = object['componentName']
        fail MsRest::DeserializationError.new('Error occured in deserializing the enum', nil, nil, nil) if (!deserialized_property.nil? && !deserialized_property.empty? && !Azure::ARM::Compute::ComponentNames.constants.any? { |e| Azure::ARM::Compute::ComponentNames.const_get(e) == deserialized_property })
        output_object.component_name = deserialized_property

        deserialized_property = object['settingName']
        fail MsRest::DeserializationError.new('Error occured in deserializing the enum', nil, nil, nil) if (!deserialized_property.nil? && !deserialized_property.empty? && !Azure::ARM::Compute::SettingNames.constants.any? { |e| Azure::ARM::Compute::SettingNames.const_get(e) == deserialized_property })
        output_object.setting_name = deserialized_property

        deserialized_property = object['content']
        output_object.content = deserialized_property

        output_object.validate

        output_object
      end
    end
  end
end
