# Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
# Changes may cause incorrect behavior and will be lost if the code is


module Azure::ARM::Compute
  module Models
    #
    # Describes the properties of a Virtual Machine.
    #
    class VirtualMachineProperties
      # @return [HardwareProfile] Gets or sets the hardware profile.
      attr_accessor :hardware_profile

      # @return [StorageProfile] Gets or sets the storage profile.
      attr_accessor :storage_profile

      # @return [OSProfile] Gets or sets the OS profile.
      attr_accessor :os_profile

      # @return [NetworkProfile] Gets or sets the network profile.
      attr_accessor :network_profile

      # @return [SubResource] Gets or sets the reference Id of the
      # availailbity set to which this virtual machine belongs.
      attr_accessor :availability_set

      # @return [String] Gets or sets the provisioning state, which only
      # appears in the response.
      attr_accessor :provisioning_state

      # @return [VirtualMachineInstanceView] Gets the virtual machine instance
      # view.
      attr_accessor :instance_view

      #
      # Validate the object. Throws ArgumentError if validation fails.
      #
      def validate
        @hardware_profile.validate unless @hardware_profile.nil?
        @storage_profile.validate unless @storage_profile.nil?
        @os_profile.validate unless @os_profile.nil?
        @network_profile.validate unless @network_profile.nil?
        @availability_set.validate unless @availability_set.nil?
        @instance_view.validate unless @instance_view.nil?
      end

      #
      # Serializes given Model object into Ruby Hash.
      # @param object Model object to serialize.
      # @return [Hash] Serialized object in form of Ruby Hash.
      #
      def self.serialize_object(object)
        object.validate
        output_object = {}

        serialized_property = object.hardware_profile
        if (serialized_property)
          serialized_property = Azure::ARM::Compute::Models::HardwareProfile.serialize_object(serialized_property)
        end
        output_object['hardwareProfile'] = serialized_property unless serialized_property.nil?

        serialized_property = object.storage_profile
        if (serialized_property)
          serialized_property = Azure::ARM::Compute::Models::StorageProfile.serialize_object(serialized_property)
        end
        output_object['storageProfile'] = serialized_property unless serialized_property.nil?

        serialized_property = object.os_profile
        if (serialized_property)
          serialized_property = Azure::ARM::Compute::Models::OSProfile.serialize_object(serialized_property)
        end
        output_object['osProfile'] = serialized_property unless serialized_property.nil?

        serialized_property = object.network_profile
        if (serialized_property)
          serialized_property = Azure::ARM::Compute::Models::NetworkProfile.serialize_object(serialized_property)
        end
        output_object['networkProfile'] = serialized_property unless serialized_property.nil?

        serialized_property = object.availability_set
        if (serialized_property)
          serialized_property = Azure::ARM::Compute::Models::SubResource.serialize_object(serialized_property)
        end
        output_object['availabilitySet'] = serialized_property unless serialized_property.nil?

        serialized_property = object.provisioning_state
        output_object['provisioningState'] = serialized_property unless serialized_property.nil?

        serialized_property = object.instance_view
        if (serialized_property)
          serialized_property = Azure::ARM::Compute::Models::VirtualMachineInstanceView.serialize_object(serialized_property)
        end
        output_object['instanceView'] = serialized_property unless serialized_property.nil?

        output_object
      end

      #
      # Deserializes given Ruby Hash into Model object.
      # @param object [Hash] Ruby Hash object to deserialize.
      # @return [VirtualMachineProperties] Deserialized object.
      #
      def self.deserialize_object(object)
        return if object.nil?
        output_object = VirtualMachineProperties.new

        deserialized_property = object['hardwareProfile']
        if (deserialized_property)
          deserialized_property = Azure::ARM::Compute::Models::HardwareProfile.deserialize_object(deserialized_property)
        end
        output_object.hardware_profile = deserialized_property

        deserialized_property = object['storageProfile']
        if (deserialized_property)
          deserialized_property = Azure::ARM::Compute::Models::StorageProfile.deserialize_object(deserialized_property)
        end
        output_object.storage_profile = deserialized_property

        deserialized_property = object['osProfile']
        if (deserialized_property)
          deserialized_property = Azure::ARM::Compute::Models::OSProfile.deserialize_object(deserialized_property)
        end
        output_object.os_profile = deserialized_property

        deserialized_property = object['networkProfile']
        if (deserialized_property)
          deserialized_property = Azure::ARM::Compute::Models::NetworkProfile.deserialize_object(deserialized_property)
        end
        output_object.network_profile = deserialized_property

        deserialized_property = object['availabilitySet']
        if (deserialized_property)
          deserialized_property = Azure::ARM::Compute::Models::SubResource.deserialize_object(deserialized_property)
        end
        output_object.availability_set = deserialized_property

        deserialized_property = object['provisioningState']
        output_object.provisioning_state = deserialized_property

        deserialized_property = object['instanceView']
        if (deserialized_property)
          deserialized_property = Azure::ARM::Compute::Models::VirtualMachineInstanceView.deserialize_object(deserialized_property)
        end
        output_object.instance_view = deserialized_property

        output_object.validate

        output_object
      end
    end
  end
end
