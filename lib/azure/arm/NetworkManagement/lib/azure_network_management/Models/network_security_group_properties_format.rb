# Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
# Changes may cause incorrect behavior and will be lost if the code is


module Azure::ARM::Network
  module Models
    #
    # Network Security Group resource
    #
    class NetworkSecurityGroupPropertiesFormat
      # @return [Array<SecurityRule>] Gets or sets Security rules of network
      # security group
      attr_accessor :security_rules

      # @return [Array<SecurityRule>] Gets or sets Default security rules of
      # network security group
      attr_accessor :default_security_rules

      # @return [Array<SubResource>] Gets collection of references to Network
      # Interfaces
      attr_accessor :network_interfaces

      # @return [Array<SubResource>] Gets collection of references to subnets
      attr_accessor :subnets

      # @return [String] Gets or sets Provisioning state of the PublicIP
      # resource Updating/Deleting/Failed
      attr_accessor :provisioning_state

      def initialize
        @security_rules = [];
        @default_security_rules = [];
        @network_interfaces = [];
        @subnets = [];
      end

      #
      # Validate the object. Throws ArgumentError if validation fails.
      #
      def validate
        @security_rules.each{ |e| e.validate if e.respond_to?(:validate) } unless @security_rules.nil?
        @default_security_rules.each{ |e| e.validate if e.respond_to?(:validate) } unless @default_security_rules.nil?
        @network_interfaces.each{ |e| e.validate if e.respond_to?(:validate) } unless @network_interfaces.nil?
        @subnets.each{ |e| e.validate if e.respond_to?(:validate) } unless @subnets.nil?
      end

      #
      # Serializes given Model object into Ruby Hash.
      # @param object Model object to serialize.
      # @return [Hash] Serialized object in form of Ruby Hash.
      #
      def self.serialize_object(object)
        object.validate
        output_object = {}

        serialized_property = object.security_rules
        if (serialized_property)
          serializedArray = [];
          serialized_property.each do |element|
            if (element)
              element = Azure::ARM::Network::Models::SecurityRule.serialize_object(element)
            end
            serializedArray.push(element);
          end
          serialized_property = serializedArray;
        end
        output_object['securityRules'] = serialized_property unless serialized_property.nil?

        serialized_property = object.default_security_rules
        if (serialized_property)
          serializedArray = [];
          serialized_property.each do |element1|
            if (element1)
              element1 = Azure::ARM::Network::Models::SecurityRule.serialize_object(element1)
            end
            serializedArray.push(element1);
          end
          serialized_property = serializedArray;
        end
        output_object['defaultSecurityRules'] = serialized_property unless serialized_property.nil?

        serialized_property = object.network_interfaces
        if (serialized_property)
          serializedArray = [];
          serialized_property.each do |element2|
            if (element2)
              element2 = MsRestAzure::SubResource.serialize_object(element2)
            end
            serializedArray.push(element2);
          end
          serialized_property = serializedArray;
        end
        output_object['networkInterfaces'] = serialized_property unless serialized_property.nil?

        serialized_property = object.subnets
        if (serialized_property)
          serializedArray = [];
          serialized_property.each do |element3|
            if (element3)
              element3 = MsRestAzure::SubResource.serialize_object(element3)
            end
            serializedArray.push(element3);
          end
          serialized_property = serializedArray;
        end
        output_object['subnets'] = serialized_property unless serialized_property.nil?

        serialized_property = object.provisioning_state
        output_object['provisioningState'] = serialized_property unless serialized_property.nil?

        output_object
      end

      #
      # Deserializes given Ruby Hash into Model object.
      # @param object [Hash] Ruby Hash object to deserialize.
      # @return [NetworkSecurityGroupPropertiesFormat] Deserialized object.
      #
      def self.deserialize_object(object)
        return if object.nil?
        output_object = NetworkSecurityGroupPropertiesFormat.new

        deserialized_property = object['securityRules']
        if (deserialized_property)
          deserializedArray = [];
          deserialized_property.each do |element4|
            if (element4)
              element4 = Azure::ARM::Network::Models::SecurityRule.deserialize_object(element4)
            end
            deserializedArray.push(element4);
          end
          deserialized_property = deserializedArray;
        end
        output_object.security_rules = deserialized_property

        deserialized_property = object['defaultSecurityRules']
        if (deserialized_property)
          deserializedArray = [];
          deserialized_property.each do |element5|
            if (element5)
              element5 = Azure::ARM::Network::Models::SecurityRule.deserialize_object(element5)
            end
            deserializedArray.push(element5);
          end
          deserialized_property = deserializedArray;
        end
        output_object.default_security_rules = deserialized_property

        deserialized_property = object['networkInterfaces']
        if (deserialized_property)
          deserializedArray = [];
          deserialized_property.each do |element6|
            if (element6)
              element6 = MsRestAzure::SubResource.deserialize_object(element6)
            end
            deserializedArray.push(element6);
          end
          deserialized_property = deserializedArray;
        end
        output_object.network_interfaces = deserialized_property

        deserialized_property = object['subnets']
        if (deserialized_property)
          deserializedArray = [];
          deserialized_property.each do |element7|
            if (element7)
              element7 = MsRestAzure::SubResource.deserialize_object(element7)
            end
            deserializedArray.push(element7);
          end
          deserialized_property = deserializedArray;
        end
        output_object.subnets = deserialized_property

        deserialized_property = object['provisioningState']
        output_object.provisioning_state = deserialized_property

        output_object.validate

        output_object
      end
    end
  end
end
