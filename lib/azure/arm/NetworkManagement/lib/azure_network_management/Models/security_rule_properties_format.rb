# Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
# Changes may cause incorrect behavior and will be lost if the code is


module Azure::ARM::Network
  module Models
    #
    # Model object.
    #
    class SecurityRulePropertiesFormat
      # @return [String] Gets or sets a description for this rule. Restricted
      # to 140 chars.
      attr_accessor :description

      # @return Gets or sets Network protocol this rule applies to. Can be
      # Tcp, Udp or All(*). Possible values for this property include: 'Tcp',
      # 'Udp', '*'
      attr_accessor :protocol

      # @return [String] Gets or sets Source Port or Range. Integer or range
      # between 0 and 65535. Asterix â€œ*â€ can also be used to match all
      # ports.
      attr_accessor :source_port_range

      # @return [String] Gets or sets Destination Port or Range. Integer or
      # range between 0 and 65535. Asterix â€œ*â€ can also be used to match
      # all ports.
      attr_accessor :destination_port_range

      # @return [String] Gets or sets source address prefix. CIDR or source IP
      # range. Asterix â€œ*â€ can also be used to match all source IPs.
      # Default tags such as â€˜VirtualNetworkâ€™, â€˜AzureLoadBalancerâ€™
      # and â€˜Internetâ€™ can also be used. If this is an ingress rule,
      # specifies where network traffic originates from.
      attr_accessor :source_address_prefix

      # @return [String] Gets or sets destination address prefix. CIDR or
      # source IP range. Asterix â€œ*â€ can also be used to match all source
      # IPs. Default tags such as â€˜VirtualNetworkâ€™,
      # â€˜AzureLoadBalancerâ€™ and â€˜Internetâ€™ can also be used.
      attr_accessor :destination_address_prefix

      # @return Gets or sets network traffic is allowed or denied. Possible
      # values are â€œAllowâ€ and â€œDenyâ€. Possible values for this
      # property include: 'Allow', 'Deny'
      attr_accessor :access

      # @return [Integer] Gets or sets the priority of the rule. The value can
      # be between 100 and 4096. The priority number must be unique for each
      # rule in the collection. The lower the priority number, the higher the
      # priority of the rule.
      attr_accessor :priority

      # @return Gets or sets the direction of the rule.InBound or Outbound.
      # The direction specifies if rule will be evaluated on incoming or
      # outcoming traffic. Possible values for this property include:
      # 'Inbound', 'Outbound'
      attr_accessor :direction

      # @return [String] Gets or sets Provisioning state of the PublicIP
      # resource Updating/Deleting/Failed
      attr_accessor :provisioning_state

      #
      # Validate the object. Throws ArgumentError if validation fails.
      #
      def validate
      end

      #
      # Serializes given Model object into Ruby Hash.
      # @param object Model object to serialize.
      # @return [Hash] Serialized object in form of Ruby Hash.
      #
      def self.serialize_object(object)
        object.validate
        output_object = {}

        serialized_property = object.description
        output_object['description'] = serialized_property unless serialized_property.nil?

        serialized_property = object.protocol
        output_object['protocol'] = serialized_property unless serialized_property.nil?

        serialized_property = object.source_port_range
        output_object['sourcePortRange'] = serialized_property unless serialized_property.nil?

        serialized_property = object.destination_port_range
        output_object['destinationPortRange'] = serialized_property unless serialized_property.nil?

        serialized_property = object.source_address_prefix
        output_object['sourceAddressPrefix'] = serialized_property unless serialized_property.nil?

        serialized_property = object.destination_address_prefix
        output_object['destinationAddressPrefix'] = serialized_property unless serialized_property.nil?

        serialized_property = object.access
        output_object['access'] = serialized_property unless serialized_property.nil?

        serialized_property = object.priority
        output_object['priority'] = serialized_property unless serialized_property.nil?

        serialized_property = object.direction
        output_object['direction'] = serialized_property unless serialized_property.nil?

        serialized_property = object.provisioning_state
        output_object['provisioningState'] = serialized_property unless serialized_property.nil?

        output_object
      end

      #
      # Deserializes given Ruby Hash into Model object.
      # @param object [Hash] Ruby Hash object to deserialize.
      # @return [SecurityRulePropertiesFormat] Deserialized object.
      #
      def self.deserialize_object(object)
        return if object.nil?
        output_object = SecurityRulePropertiesFormat.new

        deserialized_property = object['description']
        output_object.description = deserialized_property

        deserialized_property = object['protocol']
        fail MsRest::DeserializationError.new('Error occured in deserializing the enum', nil, nil, nil) if (!deserialized_property.nil? && !deserialized_property.empty? && !Azure::ARM::Network::SecurityRuleProtocol.constants.any? { |e| Azure::ARM::Network::SecurityRuleProtocol.const_get(e) == deserialized_property })
        output_object.protocol = deserialized_property

        deserialized_property = object['sourcePortRange']
        output_object.source_port_range = deserialized_property

        deserialized_property = object['destinationPortRange']
        output_object.destination_port_range = deserialized_property

        deserialized_property = object['sourceAddressPrefix']
        output_object.source_address_prefix = deserialized_property

        deserialized_property = object['destinationAddressPrefix']
        output_object.destination_address_prefix = deserialized_property

        deserialized_property = object['access']
        fail MsRest::DeserializationError.new('Error occured in deserializing the enum', nil, nil, nil) if (!deserialized_property.nil? && !deserialized_property.empty? && !Azure::ARM::Network::SecurityRuleAccess.constants.any? { |e| Azure::ARM::Network::SecurityRuleAccess.const_get(e) == deserialized_property })
        output_object.access = deserialized_property

        deserialized_property = object['priority']
        deserialized_property = Integer(deserialized_property) unless deserialized_property.to_s.empty?
        output_object.priority = deserialized_property

        deserialized_property = object['direction']
        fail MsRest::DeserializationError.new('Error occured in deserializing the enum', nil, nil, nil) if (!deserialized_property.nil? && !deserialized_property.empty? && !Azure::ARM::Network::SecurityRuleDirection.constants.any? { |e| Azure::ARM::Network::SecurityRuleDirection.const_get(e) == deserialized_property })
        output_object.direction = deserialized_property

        deserialized_property = object['provisioningState']
        output_object.provisioning_state = deserialized_property

        output_object.validate

        output_object
      end
    end
  end
end
